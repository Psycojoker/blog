#!/usr/bin/env python

import os
import re
import sys
import argh
import time
import shutil
from datetime import date, datetime

import unicodedata

from PIL import Image


base_path = os.path.expanduser("~/code/blog/worlddomination.be/")


def slugify(value):
    """
    Stolen (and adapted) from django master tree.
    """
    value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')
    value = re.sub('[^\w\s-]', '', value).strip().lower()
    return re.sub('[-\s]+', '-', value)


def current_year():
    return date.today().year


def install_blog():
    if not os.path.exists(os.path.expanduser("~/code/blog/")):
        os.makedirs(os.path.expanduser("~/code/blog/"))

    if not os.path.exists(base_path):
        os.system("cd ~/code/blog/ && git clone https://github.com/psycojoker/worlddomination.be && cd worlddomination.be && make")


def post(title):
    install_blog()
    if not os.path.exists(os.path.join(base_path, "content/blog/%s/" % current_year())):
        os.makedirs(os.path.join(base_path, "content/blog/%s/" % current_year()))

    if not os.path.exists(os.path.join(base_path, "/content/blog/%s/%s.html" % (current_year(), current_year()))):
        shutil.copy(os.path.join(base_path, "content/blog/2010/2010.html"), os.path.join(base_path, "content/blog/%s/%s.html" % (current_year(), current_year())))

    os.system("vi %s" % os.path.join(base_path, "content/blog/%s/%s.html" % (current_year(), slugify(title.decode("Utf-8")))))


def generate_html_and_thumbnail(path, name, target_dir, section):
    image = Image.open(path)

    if image.size[0] > 848:
        print "[info] generating thumbnail"
        image.thumbnail((848, 848))

        thumbnail_name = ".".join(name.split(".")[:-1]) + "_thumbnail" + "." + image.format.lower()
        thumbnail_path = os.path.join(target_dir, thumbnail_name)

        image.save(thumbnail_path, image.format)

        md = '<a href="%s"><img class="post-img" src="%s" alt="%s" /></a>' % (os.path.join("/media/img", section, name), os.path.join("/media/img", section, thumbnail_name), name)
    else:
        md = '<img class="post-img" src="%s" alt="%s" />' % (os.path.join("/media/img", section, name), name)

    os.system("echo '%s' | xclip -i" % md)
    print md


def image(path, name=None, section="misc"):
    target_dir = os.path.join(base_path, "media/img", section)
    if not os.path.exists(target_dir):
        os.makedirs(target_dir)

    path = os.path.expanduser(path)
    path = os.path.abspath(path)

    if not os.path.exists(path):
        print "Error: %s doesn't exists"
        sys.exit(1)

    if name is None:
        name = os.path.split(path)[1]
    elif "." not in name:
        name += "." + path.split(".")[-1]

    target = os.path.join(target_dir, name)

    shutil.copy(path, target)

    generate_html_and_thumbnail(path, name, target_dir, section)


def screenshot(sleep=None, section="misc", s=True, name=None):
    target_dir = os.path.join(base_path, "media/img", section)
    if not os.path.exists(target_dir):
        os.makedirs(target_dir)

    command = "scrot"

    if s:
        command += " -s"

    if name is None:
        name = datetime.now().strftime("screenshot_%Y-%m-%d.png")
    elif not name.endswith(".png", ".PNG"):
        name += ".png"

    path = os.path.join(target_dir, name)

    command += " " + path

    if sleep:
        time.sleep(int(sleep))

    os.system(command)

    generate_html_and_thumbnail(path, name, target_dir, section)


parser = argh.ArghParser()
parser.add_commands([post, image, screenshot])

if __name__ == '__main__':
    parser.dispatch()
