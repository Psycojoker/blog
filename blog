#!/usr/bin/env python

import os
import re
import argh
import shutil
from datetime import date

import unicodedata


base_path = os.path.expanduser("~/code/blog/worlddomination.be/")


def slugify(value):
    """
    Stolen (and adapted) from django master tree.
    """
    value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')
    value = re.sub('[^\w\s-]', '', value).strip().lower()
    return re.sub('[-\s]+', '-', value)


def current_year():
    return date.today().year


def install_blog():
    if not os.path.exists(os.path.expanduser("~/code/blog/")):
        os.makedirs(os.path.expanduser("~/code/blog/"))

    if not os.path.exists(base_path):
        os.system("cd ~/code/blog/ && git clone https://github.com/psycojoker/worlddomination.be && cd worlddomination.be && make")


def post(title):
    install_blog()
    if not os.path.exists(os.path.join(base_path, "content/blog/%s/" % current_year())):
        os.makedirs(os.path.join(base_path, "content/blog/%s/" % current_year()))

    if not os.path.exists(os.path.join(base_path, "/content/blog/%s/%s.html" % (current_year(), current_year()))):
        shutil.copy(os.path.join(base_path, "content/blog/2010/2010.html"), os.path.join(base_path, "content/blog/%s/%s.html" % (current_year(), current_year())))

    os.system("vi %s" % os.path.join(base_path, "content/blog/%s/%s.html" % (current_year(), slugify(title.decode("Utf-8")))))


def image(path, name=None, section="misc"):
    target_dir = os.path.join(base_path, "media/img", section)
    if not os.path.exists(target_dir):
        os.makedirs(target_dir)

    path = os.path.expanduser(path)
    path = os.path.abspath(path)

    if name is None:
        name = os.path.split(path)[1]
    elif "." not in name:
        name += "." + path.split(".")[-1]

    target = os.path.join(target_dir, name)

    shutil.copy(path, target)

    md = "![%s](%s)" % (name, target)
    os.system("echo '%s' | xclip -i" % md)
    print md


parser = argh.ArghParser()
parser.add_commands([post, image])

if __name__ == '__main__':
    parser.dispatch()
